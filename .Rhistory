format_yearly %>%
ggplot(aes(x=factor(1), y = music_sales, fill=format)) +
geom_bar(stat = 'identity', width=1, color="black") +
coord_polar("y") + # remove background, grid, numeric labels
labs(fill = "Music Format") +
theme_void() +
theme(
legend.title = element_text(face = 'bold', size = 18),
plot.background = element_rect(fill = "palegoldenrod", size = 2),
plot.title = element_text(face = "bold", size = 20),
axis.title = element_blank()
)  +
labs(
title = "Proportion of Movie Genres By Year"
) +
annotate(geom = "text", label = "1999",
x = 0.2, y = 1, size = 6) #adjust based on input year
summary_vg_sales <- vg_sales %>%
group_by(platform) %>%
summarize(
tot_global_sales = sum(global_sales),
) %>%
arrange(platform)
summary_vg_sales %>%
ggplot(aes(x='', y = tot_global_sales, fill = platform)) +
geom_bar(stat = 'identity', width=0.8, color="white") +
# annotate(geom = 'text', x = 1.5, y = summary_vg_sales$label_pos,
#          label = summary_vg_sales$tot_global_sales, size = 3) +
scale_fill_viridis(discrete = TRUE, name = 'Console Platform') +
theme_clean() +
coord_flip()
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, color="white") +
# annotate(geom = 'text', x = 1.5, y = summary_vg_sales$label_pos,
#          label = summary_vg_sales$tot_global_sales, size = 3) +
theme_clean() +
coord_flip()
summary_vg_sales <- vg_sales %>%
group_by(platform) %>%
summarize(
tot_global_sales = sum(global_sales),
) %>%
arrange(platform) %>%
filter(tot_global_sales > 2)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, color="white") +
# annotate(geom = 'text', x = 1.5, y = summary_vg_sales$label_pos,
#          label = summary_vg_sales$tot_global_sales, size = 3) +
theme_clean() +
coord_flip()
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, color="brown") +
# annotate(geom = 'text', x = 1.5, y = summary_vg_sales$label_pos,
#          label = summary_vg_sales$tot_global_sales, size = 3) +
theme_clean() +
coord_flip()
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
# annotate(geom = 'text', x = 1.5, y = summary_vg_sales$label_pos,
#          label = summary_vg_sales$tot_global_sales, size = 3) +
theme_clean() +
coord_flip()
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
# annotate(geom = 'text', x = 1.5, y = summary_vg_sales$label_pos,
#          label = summary_vg_sales$tot_global_sales, size = 3) +
theme_wsj() +
coord_flip()
View(vg_sales)
vg_sales <- vg_sales %>%
clean_names() %>%
filter(year <= 2017)
summary_vg_sales <- vg_sales %>%
group_by(platform) %>%
summarize(
tot_global_sales = sum(global_sales),
) %>%
arrange(platform) %>%
filter(tot_global_sales > 2) %>%
# all_sales <- sum(summary_vg_sales$tot_global_sales)
#
# summary_vg_sales <- summary_vg_sales %>%
#   mutate(
#     label_pos = cumsum(tot_global_sales)
#   )
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") + # change based on input
labs(
title = "Correlation Between Budget of Movie and Gross Revenue"
# change title based on animation selection
)
summary_vg_sales <- vg_sales %>%
group_by(platform) %>%
summarize(
tot_global_sales = sum(global_sales),
) %>%
arrange(platform) %>%
filter(tot_global_sales > 2)
# all_sales <- sum(summary_vg_sales$tot_global_sales)
#
# summary_vg_sales <- summary_vg_sales %>%
#   mutate(
#     label_pos = cumsum(tot_global_sales)
#   )
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") + # change based on input
labs(
title = "Correlation Between Budget of Movie and Gross Revenue"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") + # change based on input
labs(
title = "Video Game Copies Sold For Different Gaming Consoles (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") + # change based on input
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
axis.title = element_text(),
axis.title.y = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 11, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(size = 10),
axis.title = element_text(),
axis.title.y = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 11, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(size = 18),
axis.title = element_text(),
axis.title.y = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 11, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(face = 'bold', size = 18),
axis.title = element_text(),
axis.title.y = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 11, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(face = 'italic.bold', size = 18),
axis.title = element_text(),
axis.title.y = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 11, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(face = 'bold.italic', size = 18),
axis.title = element_text(),
axis.title.y = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 11, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(size = 18),
axis.title = element_text(),
axis.title.y = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 11, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 11, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Gross Revenue (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 11, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(face = 'bold.italic', size = 14, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold")
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = 'bold.italic'),
axis.title.x = element_text(size = 14, face = 'bold.italic')
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
geom_text(aes(label = round(tot_global_sales)), vjust = 1.5, size = 6) +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = 'bold.italic'),
axis.title.x = element_text(size = 14, face = 'bold.italic')
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
geom_text(aes(label = round(tot_global_sales)), hjust = 1.5, size = 6) +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = 'bold.italic'),
axis.title.x = element_text(size = 14, face = 'bold.italic')
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
geom_text(aes(label = round(tot_global_sales)), hjust = -1, size = 6) +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = 'bold.italic'),
axis.title.x = element_text(size = 14, face = 'bold.italic')
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
geom_text(aes(label = round(tot_global_sales)), hjust = -1, size = 4) +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = 'bold.italic'),
axis.title.x = element_text(size = 14, face = 'bold.italic')
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
geom_text(aes(label = round(tot_global_sales)), hjust = -0.75, size = 4) +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = 'bold.italic'),
axis.title.x = element_text(size = 14, face = 'bold.italic')
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
geom_text(aes(label = round(tot_global_sales)), hjust = -0.65, size = 4) +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = 'bold.italic'),
axis.title.x = element_text(size = 14, face = 'bold.italic')
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
geom_text(aes(label = round(tot_global_sales)), hjust = -0.5, size = 4) +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = 'bold.italic'),
axis.title.x = element_text(size = 14, face = 'bold.italic')
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
geom_text(aes(label = round(tot_global_sales)), hjust = -0.5, size = 6) +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = 'bold.italic'),
axis.title.x = element_text(size = 14, face = 'bold.italic')
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
summary_vg_sales %>%
ggplot(aes(x=platform, y = tot_global_sales)) +
geom_bar(stat = 'identity', width=0.8, fill="brown") +
geom_text(aes(label = round(tot_global_sales)), hjust = -0.5, size = 5) +
theme_wsj() +
theme(
plot.title = element_text(size = 21),
axis.title = element_text(),
axis.title.y = element_text(size = 14, face = 'bold.italic'),
axis.title.x = element_text(size = 14, face = 'bold.italic')
) +
coord_flip() +
xlab("Gaming Consoles") +
ylab("Game Copies Sold (In Millions)") +
labs(
title = "Total Video Game Copies Sold By Gaming Console (1980 - 2017)"
# change title based on animation selection
)
